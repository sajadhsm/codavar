# Generated by Django 2.1.5 on 2019-03-24 11:39

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('problem', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FrontEndContest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('is_public', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FrontEndContestParticipation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reg_date', models.DateTimeField(auto_now_add=True)),
                ('contest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participations', related_query_name='participation', to='contest.FrontEndContest')),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='front_end_contest_participations', related_query_name='front_end_contest_participation', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='frontendcontest',
            name='participants',
            field=models.ManyToManyField(related_name='front_end_contests', related_query_name='front_end_contest', through='contest.FrontEndContestParticipation', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='frontendcontest',
            name='problems',
            field=models.ManyToManyField(blank=True, related_name='contests', related_query_name='contest', to='problem.FrontEndProblem'),
        ),
    ]
